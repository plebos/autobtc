{
    "actions": [
        {
            "name": "getinfo",
            "description": "Receive all information about the Core Lightning node.",
            "category": "node",
            "function": "executeCLMCommandWrapper",
            "args": [],
            "args_description": [],
            "requiresUserApproval": false,
            "dangerous": false,
            "unlocked": true
          }, 
          {
            "name": "getlog",
            "description": "Show logs with an optional log level.",
            "category": "node",
            "function": "executeCLMCommandWrapper",
            "args": [
              {
                "name": "level",
                "type": "string",
                "optional": true,
                "default": "info",
                "allowed_values": ["broken", "unusual", "info", "debug", "io"]
              }
            ],
            "args_description": [
              "A string representing the log level (broken, unusual, info, debug, or io). The default is info."
            ],
            "requiresUserApproval": false,
            "dangerous": false
          },
          {
            "name": "help",
            "description": "Return all information about RPC commands, or a specific command if given.",
            "category": "node",
            "function": "executeCLMCommandWrapper",
            "args": [
              {
                "name": "command",
                "type": "string",
                "optional": true
              }
            ],
            "args_description": [
              "A specific command to get detailed help for. If not provided, help for all commands is returned."
            ],
            "requiresUserApproval": false,
            "dangerous": false
          }, 
          {
            "name": "datastore",
            "description": "Store data in the Core Lightning database for later retrieval.",
            "category": "node",
            "function": "executeCLMCommandWrapper",
            "args": [
              {
                "name": "key",
                "type": "array",
                "element_type": "string"
              },
              {
                "name": "string",
                "type": "string",
                "optional": true
              },
              {
                "name": "hex",
                "type": "string",
                "optional": true
              },
              {
                "name": "mode",
                "type": "string",
                "optional": true
              },
              {
                "name": "generation",
                "type": "u64",
                "optional": true
              }
            ],
            "args_description": [
              "An array of strings forming a key hierarchy.",
              "The data as a string, if it's valid utf-8.",
              "The hex data to be added to the datastore.",
              "The mode for handling the key (one of 'must-create', 'must-replace', 'create-or-replace', 'must-append', 'create-or-append').",
              "The generation for atomicity (only legal with 'must-replace' or 'must-append' mode)."
            ],
            "requiresUserApproval": false,
            "dangerous": false
          }, 
          {
            "name": "connect",
            "description": "Establish a new connection with another node in the Lightning Network.",
            "category": "node",
            "function": "executeCLMCommandWrapper",
            "args": [
              {
                "name": "id",
                "type": "string"
              },
              {
                "name": "host",
                "type": "string",
                "optional": true
              },
              {
                "name": "port",
                "type": "u16",
                "optional": true
              }
            ],
            "args_description": [
              "The target node's public key (can be of the form id@host or id@host:port).",
              "The peer's hostname or IP address.",
              "The port to connect to (depends on the current network if not specified)."
            ],
            "requiresUserApproval": true,
            "dangerous": false
          }, 
          {
            "name": "decode",
            "description": "Decode an invoice string (low-level).",
            "category": "invoice",
            "function": "executeCLMCommandWrapper",
            "args": [
              {
                "name": "string",
                "type": "string"
              }
            ],
            "args_description": [
              "A bolt11 or bolt12 string (optionally prefixed by lightning: or LIGHTNING:) as specified by the BOLT 11 and BOLT 12 specifications, or a rune as created by lightning-commando-rune(7)."
            ],
            "requiresUserApproval": false,
            "dangerous": false
          }, 
          {
            "name": "feerates",
            "description": "Query recommended onchain feerates.",
            "category": "chain",
            "function": "executeCLMCommandWrapper",
            "args": [
              {
                "name": "style",
                "type": "string"
              }
            ],
            "args_description": [
              "Either 'perkw' for feerate in units of satoshis per 1000 weight, or 'perkb' for feerate in units of satoshis per 1000 virtual bytes."
            ],
            "requiresUserApproval": false,
            "dangerous": false
          }, 
          {
            "name": "invoice",
            "description": "Accept payments.",
            "category": "payments",
            "function": "executeCLMCommandWrapper",
            "args": [
              {
                "name": "amount_msat",
                "type": "string"
              },
              {
                "name": "label",
                "type": "string"
              },
              {
                "name": "description",
                "type": "string"
              },
              {
                "name": "expiry",
                "type": "number",
                "optional": true
              },
              {
                "name": "fallbacks",
                "type": "array",
                "optional": true
              },
              {
                "name": "preimage",
                "type": "string",
                "optional": true
              },
              {
                "name": "exposeprivatechannels",
                "type": "mixed",
                "optional": true
              },
              {
                "name": "cltv",
                "type": "number",
                "optional": true
              },
              {
                "name": "deschashonly",
                "type": "boolean",
                "optional": true
              }
            ],
            "args_description": [
              "The amount in millisatoshi precision, or 'any' for an invoice that can be paid with any amount.",
              "A unique string or number used as a label for the invoice.",
              "A short description of the purpose of the payment.",
              "Optional expiry time for the invoice in seconds. Default is 604800 (1 week).",
              "Optional array of fallback addresses to include in the invoice.",
              "Optional 64-digit hex string to be used as the payment preimage for the invoice.",
              "Optional parameter to override default route hint logic.",
              "Optional parameter to set the min_final_cltv_expiry for the invoice.",
              "Optional parameter to use a hash of the description in the BOLT11 invoice instead of the description itself."
            ],
            "requiresUserApproval": false,
            "dangerous": false
          }, 
          {
            "name": "listchannels",
            "description": "Query active lightning channels in the entire network.",
            "category": "channels",
            "function": "executeCLMCommandWrapper",
            "args": [
              {
                "name": "short_channel_id",
                "type": "string",
                "optional": true
              },
              {
                "name": "source",
                "type": "string",
                "optional": true
              },
              {
                "name": "destination",
                "type": "string",
                "optional": true
              }
            ],
            "args_description": [
              "Optional short channel id to filter results by matching short_channel_id.",
              "Optional node id to filter results by channels leading from the specified node id.",
              "Optional node id to filter results by channels leading to the specified node id."
            ],
            "requiresUserApproval": false,
            "dangerous": false
          }, 
          {
            "name": "listforwards",
            "description": "Show all htlcs and their information.",
            "category": "channels",
            "function": "executeCLMCommandWrapper",
            "args": [
              {
                "name": "status",
                "type": "string",
                "optional": true
              },
              {
                "name": "in_channel",
                "type": "string",
                "optional": true
              },
              {
                "name": "out_channel",
                "type": "string",
                "optional": true
              }
            ],
            "args_description": [
              "Optional status to filter results by htlcs with the given status (offered, settled, failed, or local_failed).",
              "Optional in_channel to filter results by matching incoming channel.",
              "Optional out_channel to filter results by matching outgoing channel."
            ],
            "requiresUserApproval": false,
            "dangerous": false,
            "unlocked": true
          }, 
          {
            "name": "listfunds",
            "description": "Show all funds currently managed by the Core Lightning node.",
            "category": "wallet",
            "function": "executeCLMCommandWrapper",
            "args": [
              {
                "name": "spent",
                "type": "boolean",
                "optional": true
              }
            ],
            "args_description": [
              "Optional spent parameter to include spent outputs in addition to unspent ones. Default is false."
            ],
            "requiresUserApproval": false,
            "dangerous": false
          }, 
          {
            "name": "listhtlcs",
            "description": "Query HTLCs.",
            "category": "info",
            "function": "executeCLMCommandWrapper",
            "args": [
              {
                "name": "id",
                "type": "string",
                "optional": true
              }
            ],
            "args_description": [
              "Optional short channel id (e.g. 1x2x3) or full 64-byte hex channel id to list HTLCs for a specific channel."
            ],
            "requiresUserApproval": false,
            "dangerous": false
          },
          {
            "name": "listinvoices",
            "description": "Query invoice status.",
            "category": "info",
            "function": "executeCLMCommandWrapper",
            "args": [
              {
                "name": "label",
                "type": "string",
                "optional": true
              },
              {
                "name": "invstring",
                "type": "string",
                "optional": true
              },
              {
                "name": "payment_hash",
                "type": "string",
                "optional": true
              },
              {
                "name": "offer_id",
                "type": "string",
                "optional": true
              }
            ],
            "args_description": [
              "Optional unique label supplied at invoice creation.",
              "Optional invstring string representing the invoice.",
              "Optional payment_hash of the invoice.",
              "Optional local offer_id this invoice was issued for."
            ],
            "requiresUserApproval": false,
            "dangerous": false
          },
          {
            "name": "listnodes",
            "description": "Get the list of nodes in the known network.",
            "category": "info",
            "function": "executeCLMCommandWrapper",
            "args": [
              {
                "name": "id",
                "type": "string",
                "optional": true
              }
            ],
            "args_description": [
              "Optional node id to get information about a single node."
            ],
            "requiresUserApproval": false,
            "dangerous": false
          },
          {
            "name": "listpeerchannels",
            "description": "Return data on channels of connected lightning nodes.",
            "category": "info",
            "function": "executeCLMCommandWrapper",
            "args": [
              {
                "name": "id",
                "type": "string",
                "optional": true
              }
            ],
            "args_description": [
              "Optional node id to filter the channels by a specific node."
            ],
            "requiresUserApproval": false,
            "dangerous": false
          },
          {
            "name": "listpeers",
            "description": "Return data on connected lightning nodes.",
            "category": "info",
            "function": "executeCLMCommandWrapper",
            "args": [
              {
                "name": "id",
                "type": "string",
                "optional": true
              },
              {
                "name": "level",
                "type": "string",
                "optional": true
              }              
            ],
            "args_description": [
              "Optional node id to filter the peers by a specific node.",
              "Optional log level to show log entries related to the peer(s). Valid log levels are 'io', 'debug', 'info', and 'unusual'."
            ],
            "unlocked": true,
            "requiresUserApproval": false,
            "dangerous": false
          }

    ]
  }